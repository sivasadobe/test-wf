name: On PR Closed

on:
  pull_request:
    branches:
      - main
    types:
      - closed
  workflow_dispatch:
    inputs:
      pr_number:
        description: "Pull Request Number"
        required: true
        default: ""

env:
  PR_NUMBER: ${{ github.event.number }}
  CC_SLACK_WEBHOOK: ${{ secrets.CC_SLACK_WEBHOOK }}

jobs:
  if_merged:
    runs-on: ubuntu-latest
    environment: cc-test-release
    env:
      EVENT_PR: ${{ toJson(github.event.pull_request) }}
    steps:
      - name: Print EVENT_PR
        run: |
          echo $EVENT_PR
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Perform action specific to automatic
        if: ${{ github.event_name != 'workflow_dispatch' }}
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ github.event.inputs.pr_number }}
            const octokit = require('@octokit/rest');
            const github = new octokit({ token: process.env.GITHUB_TOKEN });

            async function getPRDetails(number) {
              try {
                const response = await github.pulls.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: number,
                });
                return response.data;
              } catch (error) {
                console.log(error);
                return null; 
              }
            }

            (async () => {
              const prDetails = await getPRDetails(prNumber);
              if (prDetails) {
                console.log('PR Details:', prDetails);  // Replace with logic to use details
              } else {
                console.log('Failed to fetch PR details');
              }
            })();
      - name: Sending Notification - Slack
        uses: actions/github-script@v7
        with:
          script: |
            const sendSlackMessage = require('./.github/workflows/src/send-slack.js')
            sendSlackMessage(process.env.EVENT_PR,process.env.CC_SLACK_WEBHOOK)
